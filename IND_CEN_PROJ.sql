------------1-------------------CREATING DATABASE-----------------------

CREATE DATABASE INDIAN_CENSUS_2011_PROJECT

------------2------------------USE DATABASE FOR PROJECT---------------

USE INDIAN_CENSUS_2011_PROJECT

------------3----------------IMPORT DATASETS---------------------------
--DATASET1 (97-2003)
--DATASET2 (97-2003)

-----------4------------------CHECK DATA-------------------------------------

SELECT * FROM DATA1;
SELECT *FROM DATA2;

-----------5---------------- NO OF ROWS IN OUR DATASET------------

SELECT COUNT(*) as Count  FROM DATA1
SELECT COUNT(*) FROM DATA2;

--------6-----------------DATASET FOR JHARKHAND & BIHAR----------

SELECT * FROM DATA1
WHERE STATE IN ('JHARKHAND', 'BIHAR');

----------7------------ POPULATION OF INDIA----------------------------
SELECT SUM(POPULATION) AS POPULATION
FROM DATA2;


----------8--------- AVG GROWTH % IN INDIA------------------------------------
SELECT AVG(GROWTH)*100 AS AVG_GROWTH
FROM DATA1;

--------9---------- AVG GROWTH % IN STATE-------------------------

SELECT STATE, AVG(GROWTH)*100 AS AVG_GROWTH_STATE
FROM DATA1
GROUP BY STATE

------10----------- AVG SEX RATIO ---------------------------------

SELECT STATE, ROUND(AVG(SEX_RATIO),0) AS AVG_SEX_RATIO
FROM DATA1
GROUP BY STATE
ORDER BY AVG_SEX_RATIO DESC

-----------11---------- AVG LITERACY RATE--------------------------

SELECT STATE, ROUND(AVG(LITERACY),0) AS AVG_LITERACY_RATIO
FROM DATA1
GROUP BY STATE
ORDER BY AVG_LITERACY_RATIO DESC

----------12 ------AVG LITERACY RATE MORE THAN 90 USING HAVING----------

/*SELECT STATE, ROUND(AVG(LITERACY),0) AS AVG_LITERACY_RATIO
FROM DATA1
GROUP BY STATE
ORDER BY AVG_LITERACY_RATIO DESC
HAVING ROUND(AVG(LITERACY),0)>90   ----GETTING ERROR BECAUSE WRONG APPROACH DUE TO HAVING IS USED BEFORE ORDER BY*/

SELECT STATE, ROUND(AVG(LITERACY),0) AS AVG_LITERACY_RATIO
FROM DATA1
GROUP BY STATE
HAVING ROUND(AVG(LITERACY),0)>90
ORDER BY AVG_LITERACY_RATIO DESC

--------------13 ----------TOP  3 STATES HIGH GRWOTH % RATIO------------

SELECT TOP 3 STATE, AVG(GROWTH)*100 AS AVG_GROWTH
FROM DATA1
GROUP BY STATE
ORDER BY AVG_GROWTH DESC

----------14----------- BOTTOM 3 STATE LOWEST SEX RATIO ----------------


SELECT TOP 3 STATE, ROUND(AVG(SEX_RATIO),0) AS AVG_SEX_RATIO
FROM DATA1
GROUP BY STATE
ORDER BY AVG_SEX_RATIO ASC

-------15 --------- TOP & BOTTOM 3 STATES IN LITERACY STATE----------

--CONCEPT USING TEMP TABLE FOR TOP 3 STATES
DROP TABLE IF EXISTS #TOPSTATE
CREATE TABLE #TOPSTATE
 ( STATE NVARCHAR(255),
	TOPSTATES FLOAT
 )

INSERT INTO #TOPSTATE SELECT STATE, ROUND(AVG(LITERACY),0) AS AVG_LITERACY
												FROM DATA1
												GROUP BY STATE
												ORDER BY AVG_LITERACY DESC

SELECT TOP 3 * FROM #TOPSTATE
ORDER BY TOPSTATES DESC


DROP TABLE IF EXISTS #BOTTOMSTATE
CREATE TABLE #BOTTOMSTATE
 ( STATE NVARCHAR(255),
	BOTTOMSTATES FLOAT
 )

INSERT INTO #BOTTOMSTATE SELECT STATE, ROUND(AVG(LITERACY),0) AS AVG_LITERACY
												FROM DATA1
												GROUP BY STATE
												ORDER BY AVG_LITERACY DESC

SELECT TOP 3 * FROM #BOTTOMSTATE
ORDER BY BOTTOMSTATES ASC

--------- FOR COMBINING RESULTS--------------
--USING UNION OPERATOR-----

SELECT TOP 3 * FROM #TOPSTATE
ORDER BY TOPSTATES DESC
UNION
SELECT TOP 3 * FROM #BOTTOMSTATE
ORDER BY BOTTOMSTATES ASC  -- GETTING ERROR DUE TO ORDER BY CLAUSE SO 


--USING SUB-QUERY CONCEPT TO REMOVE ERROR

--SELECT * FROM A UNION SELECT * FROM B

SELECT * FROM (SELECT TOP 3 * FROM #TOPSTATE
ORDER BY TOPSTATES DESC) A
UNION
SELECT * FROM (SELECT TOP 3 * FROM #BOTTOMSTATE
ORDER BY BOTTOMSTATES ASC) B

----16---- STATE STARTING WITH LETTER A----------

SELECT * FROM DATA1 
WHERE STATE LIKE 'A%'

OR 

SELECT DISTINCT STATE FROM DATA1 
WHERE STATE LIKE 'A%'

--- STARTING WITH A OR B--

SELECT DISTINCT STATE FROM DATA1 
WHERE STATE LIKE 'A%' OR STATE LIKE 'B%'

--- STATRTING WITH LETTER A AND ENDS WITH M

SELECT DISTINCT STATE FROM DATA1 
WHERE STATE LIKE 'A%' AND STATE LIKE '%M'

------17---- CALCULATE OF NO. OF MALE AND FEMALE---------
SELECT * FROM DATA1
SELECT * FROM DATA2



--JOINING TABLE

SELECT A.DISTRICT, A.STATE, A.SEX_RATIO, B.POPULATION 
FROM DATA1 A
INNER JOIN
DATA2 B
ON A.DISTRICT = B.DISTRICT

/*
FEMALES/MALES = SEX_RATIO..................1

FEMALES + MALES = POPULATION .............2

FEMALES = POPULATION - MALES..............3

(POPULATION.MALES) = (SEX_RATIO)* MALES

POPULATION = MALES(SEX_RATIO+1) 

MALES = POPULATION / (SEX_RATIO+1) .................. MALES

FEMALES = POPULATION-POPULATION*(SEX_RATIO+1) 

=POPULATION(1-1/(SEX_RATIO+1))
FEMALE=(POPULATION*(SEX_RATIO))/(SEX_RATIO+1)..............FEMALE
*/

--USING MALE & FEMALE FORMULA
SELECT DISTRICT, STATE, POPULATION/(SEX_RATIO+1) MALES, ((POPULATION*SEX_RATIO)/(SEX_RATIO+1)) FEMALES FROM 
(SELECT A.DISTRICT, A.STATE, A.SEX_RATIO/1000 SEX_RATIO, B.POPULATION FROM DATA1 A INNER JOIN DATA2 B ON A.DISTRICT = B.DISTRICT) C


---ROUND BUT SHOWING DISTRICT LEVEL 
SELECT DISTRICT, STATE, ROUND(POPULATION/(SEX_RATIO+1),0) MALES, ROUND(((POPULATION*SEX_RATIO)/(SEX_RATIO+1)),0) FEMALES FROM 
(SELECT A.DISTRICT, A.STATE, A.SEX_RATIO/1000 SEX_RATIO, B.POPULATION FROM DATA1 A INNER JOIN DATA2 B ON A.DISTRICT = B.DISTRICT) C

--NOW SHOWING STATE WISE MALE & FEMALE
SELECT D.STATE, SUM(D.MALES) TOTAL_MALES, SUM(D.FEMALES) TOTAL_FEMALES FROM 
(SELECT DISTRICT, STATE, ROUND(POPULATION/(SEX_RATIO+1),0) MALES, ROUND(((POPULATION*SEX_RATIO)/(SEX_RATIO+1)),0) FEMALES FROM 
(SELECT A.DISTRICT, A.STATE, A.SEX_RATIO/1000 SEX_RATIO, B.POPULATION FROM DATA1 A INNER JOIN DATA2 B ON A.DISTRICT = B.DISTRICT) C) D
GROUP BY D.STATE

--------18 -----CALCULATED TOTAL LITERACY RATE-------------------

SELECT A.DISTRICT, A.STATE, A.LITERACY LITERACY_RATIO, B.POPULATION FROM DATA1 A INNER JOIN DATA2 B ON A.DISTRICT = B.DISTRICT

--CASE STUDIES
/*

TOTAL LITERATE PEOPLE/POPULATION = LITERACY_RATIO

TOTAL LITERATE PEOPLE = LITERACY_RATIO*POPULATION

TOTAL ILLITERATE PEOPLE = (1-LITERACY_RATIO)*POPULATION

*/

---DIVIDED BY 100 AND CREATE SUB-QUERY
SELECT C.DISTRICT, C.STATE, C.LITERACY_RATIO *C.POPULATION LITERATE_PEOPLE, (1-C.LITERACY_RATIO)*C.POPULATION ILLITERATE_PEOPLE FROM
(SELECT A.DISTRICT, A.STATE, A.LITERACY/100 LITERACY_RATIO, B.POPULATION FROM DATA1 A INNER JOIN DATA2 B ON A.DISTRICT = B.DISTRICT) C

-- ROUND

SELECT C.DISTRICT, C.STATE, ROUND(C.LITERACY_RATIO *C.POPULATION,0) LITERATE_PEOPLE, ROUND((1-C.LITERACY_RATIO)*C.POPULATION,0) ILLITERATE_PEOPLE FROM
(SELECT A.DISTRICT, A.STATE, A.LITERACY/100 LITERACY_RATIO, B.POPULATION FROM DATA1 A INNER JOIN DATA2 B ON A.DISTRICT = B.DISTRICT) C

--TO CHANGE STATE WISE DATA
SELECT D.STATE, SUM(LITERATE_PEOPLE) TOTAL_LITERATE, SUM(ILLITERATE_PEOPLE) TOTAL_ILLITERATE FROM
(SELECT C.DISTRICT, C.STATE, ROUND(C.LITERACY_RATIO *C.POPULATION,0) LITERATE_PEOPLE, ROUND((1-C.LITERACY_RATIO)*C.POPULATION,0) ILLITERATE_PEOPLE FROM
(SELECT A.DISTRICT, A.STATE, A.LITERACY/100 LITERACY_RATIO, B.POPULATION FROM DATA1 A INNER JOIN DATA2 B ON A.DISTRICT = B.DISTRICT) C) D
GROUP BY D.STATE

------------19  ----------- POPULATION IN PREVIOUS CENSUS


--CHECK POPULATION VS GROWTH
SELECT  A.District, A.State, A.Growth/1000 GROWTH, B.Population FROM Data1 A INNER JOIN Data2 B ON A.DISTRICT = B.District

/*
 
CASE STUDIES POPULATION

PREVIOUS_CENSUS+GROWTH*PERVIOUS_CENSUS = POPULATION

PREVIOUS_CENSUS = POPULATION/(1+GROWTH)
*/

-------------- TO CHECK PREVIOUS CENSUS POPULATION------------
SELECT D.District, D.State, ROUND(D.Population/(1+D.GROWTH),0) PREVIOUS_CENSUS_POPULATION, Population CURRENT_CENSUS_POPULATION FROM
(SELECT  A.District, A.State, A.Growth GROWTH, B.Population FROM Data1 A INNER JOIN Data2 B ON A.DISTRICT = B.District) D

-------------POPULATION STATE WISE IN PREVIOUS CENSUS 
SELECT E.State, SUM(E.PREVIOUS_CENSUS_POPULATION) PREVIOUS_CENSUS_POPULATION, SUM(E.CURRENT_CENSUS_POPULATION) CURRENT_CENSUS_POPULATION FROM
(SELECT D.District, D.State, ROUND(D.Population/(1+D.GROWTH),0) PREVIOUS_CENSUS_POPULATION, Population CURRENT_CENSUS_POPULATION FROM
(SELECT  A.District, A.State, A.Growth GROWTH, B.Population FROM Data1 A INNER JOIN Data2 B ON A.DISTRICT = B.District) D) E
GROUP BY E.State

------------- TOTAL POPULATONS INDIA IN PREVIOUS YEAR

SELECT  SUM(C.PREVIOUS_CENSUS_POPULATION) PREVIOUS_CENSUS_POPULATION, SUM(C.CURRENT_CENSUS_POPULATION) CURRENT_CENSUS_POPULATION FROM
(SELECT E.State, SUM(E.PREVIOUS_CENSUS_POPULATION) PREVIOUS_CENSUS_POPULATION, SUM(E.CURRENT_CENSUS_POPULATION) CURRENT_CENSUS_POPULATION FROM
(SELECT D.District, D.State, ROUND(D.Population/(1+D.GROWTH),0) PREVIOUS_CENSUS_POPULATION, Population CURRENT_CENSUS_POPULATION FROM
(SELECT  A.District, A.State, A.Growth GROWTH, B.Population FROM Data1 A INNER JOIN Data2 B ON A.DISTRICT = B.District) D) E
GROUP BY E.State) C
 
  
-- population vs area

select (g.total_area/g.previous_census_population)  as previous_census_population_vs_area, 
(g.total_area/g.current_census_population) as current_census_population_vs_area from
(select q.*,r.total_area from (select '1' as keyy,n.* from
(select sum(m.previous_census_population) previous_census_population,sum(m.current_census_population) current_census_population from
(select e.state,sum(e.previous_census_population) previous_census_population,sum(e.current_census_population) current_census_population from
(select d.district,d.state,round(d.population/(1+d.growth),0) previous_census_population,d.population current_census_population from
(select a.district,a.state,a.growth growth,b.population from data1 a inner join data2 b on a.district=b.district) d) e group by e.state)m) n) q 
inner join (select '1' as keyy,z.* from (select sum(area_km2) total_area from data2)z) r on q.keyy=r.keyy)g

--window 

output top 3 districts from each state with highest literacy rate


select a.* from
(select district,state,literacy,rank() over(partition by state order by literacy desc) rnk from data1) a

where a.rnk in (1,2,3) order by state